//
// Generated by CocoaPods-Keys
// on 09/06/2019
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "ReadItKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation ReadItKeys

  @dynamic goodreadsAPIClientKey;
  @dynamic goodreadsAPIClientSecret;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(ReadItKeys *, SEL) = NULL;

  if ([key isEqualToString:@"goodreadsAPIClientKey"]) {
    implementation = _podKeys17a672d7459f5824dc57337540494318;
  }

  if ([key isEqualToString:@"goodreadsAPIClientSecret"]) {
    implementation = _podKeys89554f22827804815a8d3b99ef201470;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys17a672d7459f5824dc57337540494318(ReadItKeys *self, SEL _cmd)
{
  
    
      char cString[23] = { ReadItKeysData[1605], ReadItKeysData[148], ReadItKeysData[315], ReadItKeysData[1920], ReadItKeysData[359], ReadItKeysData[1895], ReadItKeysData[815], ReadItKeysData[2149], ReadItKeysData[1377], ReadItKeysData[840], ReadItKeysData[820], ReadItKeysData[1090], ReadItKeysData[440], ReadItKeysData[996], ReadItKeysData[1652], ReadItKeysData[1417], ReadItKeysData[1650], ReadItKeysData[911], ReadItKeysData[115], ReadItKeysData[703], ReadItKeysData[978], ReadItKeysData[2037], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys89554f22827804815a8d3b99ef201470(ReadItKeys *self, SEL _cmd)
{
  
    
      char cString[43] = { ReadItKeysData[794], ReadItKeysData[1954], ReadItKeysData[1991], ReadItKeysData[396], ReadItKeysData[1625], ReadItKeysData[2035], ReadItKeysData[2104], ReadItKeysData[2096], ReadItKeysData[71], ReadItKeysData[2086], ReadItKeysData[199], ReadItKeysData[1350], ReadItKeysData[694], ReadItKeysData[1827], ReadItKeysData[1038], ReadItKeysData[444], ReadItKeysData[763], ReadItKeysData[1118], ReadItKeysData[1655], ReadItKeysData[1006], ReadItKeysData[907], ReadItKeysData[1357], ReadItKeysData[769], ReadItKeysData[1144], ReadItKeysData[1313], ReadItKeysData[336], ReadItKeysData[968], ReadItKeysData[2048], ReadItKeysData[137], ReadItKeysData[927], ReadItKeysData[1506], ReadItKeysData[274], ReadItKeysData[1548], ReadItKeysData[1968], ReadItKeysData[33], ReadItKeysData[1665], ReadItKeysData[2036], ReadItKeysData[67], ReadItKeysData[1839], ReadItKeysData[624], ReadItKeysData[1343], ReadItKeysData[2112], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char ReadItKeysData[2222] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"goodreadsAPIClientKey": self.goodreadsAPIClientKey,
            @"goodreadsAPIClientSecret": self.goodreadsAPIClientSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
